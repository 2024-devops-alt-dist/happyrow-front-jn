#name: Deploy to GitHub Pages
#
#on:
#  push:
#    branches: [ main, master ]
#  workflow_dispatch:
#
#permissions:
#  contents: read
#  pages: write
#  id-token: write
#
#concurrency:
#  group: "pages"
#  cancel-in-progress: false
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v4
#
#    - name: Setup Node.js
#      uses: actions/setup-node@v4
#      with:
#        node-version: '20'
#        cache: 'npm'
#
#    - name: Install dependencies
#      run: npm ci --legacy-peer-deps
#
#    - name: Run tests
#      run: npm run test
#
#    - name: Build application
#      run: npm run build
#
#    - name: Setup Pages (if enabled)
#      id: pages
#      uses: actions/configure-pages@v4
#      continue-on-error: true
#
#    - name: Upload artifact
#      uses: actions/upload-pages-artifact@v3
#      with:
#        path: ./dist
#
#  deploy:
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    needs: build
#    if: success()
#    permissions:
#      pages: write
#      id-token: write
#    steps:
#    - name: Deploy to GitHub Pages
#      id: deployment
#      uses: actions/deploy-pages@v4
#      continue-on-error: true
#
#    - name: Deployment Status
#      run: |
#        if [ "${{ steps.deployment.outcome }}" = "failure" ]; then
#          echo "‚ö†Ô∏è GitHub Pages deployment failed. Please ensure:"
#          echo "1. Go to repository Settings ‚Üí Pages"
#          echo "2. Set Source to 'GitHub Actions'"
#          echo "3. Re-run this workflow"
#          echo "4. Check that Pages is enabled in repository settings"
#          echo "üìñ See DEPLOYMENT.md for detailed instructions"
#          exit 1
#        else
#          echo "‚úÖ Successfully deployed to GitHub Pages!"
#          echo "üåê Your site should be available at: ${{ steps.deployment.outputs.page_url }}"
#        fi
